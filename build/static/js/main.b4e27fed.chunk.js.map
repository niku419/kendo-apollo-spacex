{"version":3,"sources":["kendo apollo/components/LoaderCardComponent.jsx","kendo apollo/modules/graphql/queries/queries.js","kendo apollo/common/constants.js","kendo apollo/modules/Launches.jsx","kendo apollo/modules/Rockets.jsx","kendo apollo/modules/UpComingLaunches.jsx","kendo apollo/historyData.js","kendo apollo/components/NavBar.jsx","kendo apollo/Apollo.js","kendo apollo/components/LoaderComponent.jsx","kendo apollo/modules/GetLaunchById.jsx","kendo apollo/modules/GetRocketById.jsx","kendo apollo/modules/graphql/mutations/mutations.js","kendo apollo/modules/Users.jsx","kendo apollo/components/form-components.js","kendo apollo/components/Validators.jsx","kendo apollo/modules/UserForm.jsx","kendo apollo/modules/GetUpComingLaunchById.jsx","kendo apollo/modules/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoaderCardComponent","loading","wrap","map","value","span","xs","sm","md","lg","className","active","Meta","title","description","GET_LAUNCH_BY_ID","gql","GET_ROCKET_BY_ID","GET_UPCOMING_LAUNCH_BY_ID","GET_LAUNCHES","TOTAL_ROCKET_COUNT","GET_ROCKETS","GET_UPCOMING_LAUNCHES","TOTAL_UPCOMING_LAUNCH_COUNT","TOTAL_LAUNCH_COUNT","GET_USER","GET_DATA_COUNT","GET_USERS","NEW_QUERY","routes","Launches","history","useHistory","totalCountData","useQuery","totalCount","data","launches","length","useState","offset","setOffset","page","setPage","itemsPerPage","setItemsPerPage","tableData","setTableData","variables","limit","error","fetchMore","JSON","stringify","href","dir","id","text","style","display","justifyContent","launch","onClick","console","log","push","alignItems","mission_name","details","skip","take","total","onPageChange","pageNumEvent","then","res","refetch","buttonCount","info","type","rockets","rocket","redirect","name","UpComingLaunches","launchesUpcoming","useEffect","Item","hoverable","current","onChange","pageNum","defaultPageSize","pageSize","createBrowserHistory","NavBar","location","window","pathname","mySubString","substring","indexOf","lastIndexOf","width","borderBottomStyle","disableToastTimeout","cacheData","InMemoryCache","dateConvert","date","moment","format","toast","content","message","destroy","success","warning","httpLink","createHttpLink","uri","credentials","responseMessageLink","ApolloLink","operation","forward","response","isObject","Object","keys","status","setTimeout","oResponse","errorLink","onError","options","graphQLErrors","networkError","statusCode","clearTimeout","result","replace","get","errors","errorMessage","locations","path","extensions","Sentry","Error","code","exception","client","ApolloClient","link","from","cache","Apollo","children","ApolloProvider","LoaderComponent","GetLaunchById","launchId","useParams","marginTop","flexWrap","links","flickr_images","imageLink","src","alt","ships","weight_kg","year_built","rocket_name","launch_site","site_name_long","launch_date_local","video_link","article_link","launch_success","upcoming","rocketId","company","country","boosters","engines","engines_loss_max","diameter","meters","mass","kg","height","cost_per_launch","landing_legs","number","material","ADD_USER","EDIT_USER","DELETE_USER","Users","search","setSearch","users","count","setCount","fetchPolicy","useMutation","deleteUser","useRef","show","setShow","InlineComponent","marginRight","onClose","margin","textAlign","primary","confirm","_eq","a","padding","label","editorId","editorValue","e","target","searchText","concat","query","pageable","field","classNAME","cell","props","dataItem","previousNext","FormInput","fieldRenderProps","validationMessage","touched","valid","disabled","hint","optional","others","showValidationMessage","showHint","hintId","errorId","editorValid","editorDisabled","ariaDescribedBy","URLRegex","RegExp","userNameValidator","URLValidator","test","requiredValidator","getter","UserForm","userId","editUser","addUser","twitter","setTwitter","setRocket","setName","setRedirect","setDisabled","to","initialValues","onSubmit","render","formRenderProps","component","validator","redir","onFormReset","Home","exact","Rockets","GetRocketById","GetUpComingLaunchById","App","classnmae","overFlowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4e27fed.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Skeleton, Card, Row, Col } from 'antd';\r\n\r\nexport default function LoaderCardComponent({ loading }) {\r\n  return (\r\n    <Row wrap>\r\n      {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((value) => (\r\n        <Col\r\n          key={value}\r\n          span={8}\r\n          xs={{ span: 24 }}\r\n          sm={{ span: 24 }}\r\n          md={{ span: 12 }}\r\n          lg={{ span: 8 }}\r\n          className=\"pad\"\r\n        >\r\n          <Skeleton loading={loading} active>\r\n            <Card loading={loading} key={value}>\r\n              <Card.Meta title=\"loading\" description=\"loading\" />\r\n            </Card>\r\n          </Skeleton>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_LAUNCH_BY_ID = gql`\r\n  query LaunchById($id: ID!) {\r\n    launch(id: $id) {\r\n      details\r\n      id\r\n      launch_date_local\r\n      launch_site {\r\n        site_name_long\r\n      }\r\n      launch_success\r\n      launch_year\r\n      links {\r\n        article_link\r\n        flickr_images\r\n        video_link\r\n      }\r\n      mission_name\r\n      rocket {\r\n        rocket_name\r\n        rocket {\r\n          id\r\n        }\r\n      }\r\n      ships {\r\n        name\r\n        weight_kg\r\n        year_built\r\n        speed_kn\r\n      }\r\n      upcoming\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ROCKET_BY_ID = gql`\r\n  query RocketById($id: ID!) {\r\n    rocket(id: $id) {\r\n      boosters\r\n      company\r\n      cost_per_launch\r\n      country\r\n      description\r\n      diameter {\r\n        meters\r\n      }\r\n      engines {\r\n        engine_loss_max\r\n      }\r\n      height {\r\n        meters\r\n      }\r\n      id\r\n      landing_legs {\r\n        number\r\n        material\r\n      }\r\n      mass {\r\n        kg\r\n      }\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_UPCOMING_LAUNCH_BY_ID = gql`\r\n  query UpcomingLaunchById($id: ID!) {\r\n    launchesUpcoming(find: { id: $id }) {\r\n      details\r\n      id\r\n      launch_date_local\r\n      launch_site {\r\n        site_name\r\n      }\r\n      mission_name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_LAUNCHES = gql`\r\n  query($offset: Int, $limit: Int) {\r\n    launches(\r\n      offset: $offset\r\n      limit: $limit\r\n      order: \"DESC\"\r\n      sort: \"launch_date_local\"\r\n    ) {\r\n      id\r\n      details\r\n      mission_name\r\n      launch_date_local\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOTAL_ROCKET_COUNT = gql`\r\n  query {\r\n    rockets {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ROCKETS = gql`\r\n  query getrockets($offset: Int, $limit: Int) {\r\n    rockets(offset: $offset, limit: $limit) {\r\n      description\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_UPCOMING_LAUNCHES = gql`\r\n  query getlaunches($offset: Int) {\r\n    launchesUpcoming(\r\n      limit: 1\r\n      order: \"DESC\"\r\n      sort: \"launch_date_local\"\r\n      offset: $offset\r\n    ) {\r\n      details\r\n      id\r\n      mission_name\r\n      launch_date_local\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOTAL_UPCOMING_LAUNCH_COUNT = gql`\r\n  query {\r\n    launchesUpcoming {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOTAL_LAUNCH_COUNT = gql`\r\n  query {\r\n    launches {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query GetUser($_eq: uuid) {\r\n    users(where: { id: { _eq: $_eq } }) {\r\n      name\r\n      id\r\n      rocket\r\n      twitter\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DATA_COUNT = gql`\r\n  query {\r\n    users {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USERS = gql`\r\n  query getusers(\r\n    $offset: Int\r\n    $limit: Int\r\n    $_ilike: String\r\n    $_similar: String\r\n  ) {\r\n    users(\r\n      limit: $limit\r\n      offset: $offset\r\n      order_by: { timestamp: desc }\r\n      where: { name: { _ilike: $_ilike }, rocket: { _ilike: $_similar } }\r\n    ) {\r\n      name\r\n      id\r\n      rocket\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_QUERY = gql`\r\n  query users($offset: Int, $limit: Int, $search: String) {\r\n    users(\r\n      order_by: { timestamp: desc }\r\n      limit: $limit\r\n      offset: $offset\r\n      where: {\r\n        _or: [{ name: { _ilike: $search } }, { rocket: { _ilike: $search } }]\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      rocket\r\n    }\r\n  }\r\n`;\r\n\r\n// name: { _ilike: $searchname }\r\n// const FILTER_ROCKETNAME = gql`\r\n//   query getusername($_ilike: String) {\r\n//     users(where: {rocket: {_ilike: $_ilike}}){\r\n//       name\r\n//       id\r\n//       rocket\r\n//     }\r\n//   }\r\n// `\r\n\r\n// const FILTER_USERNAME = gql`\r\n//   query getusername($_ilike: String) {\r\n//     users(where: {_or: {name: {_ilike: $_ilike}}}){\r\n//       name\r\n//       id\r\n//       rocket\r\n//     }\r\n//   }\r\n// `\r\n// const NEW_QUERY = gql`\r\n//   query users($offset: Int, $limit: Int, $search: String, $searchname: String) {\r\n//     users(\r\n//       order_by: { timestamp: desc }\r\n//       limit: $limit\r\n//       offset: $offset\r\n//       where: {\r\n//         _or: [{ name: { _ilike: $search } }, { rocket: { _ilike: $search } }]\r\n//         name: { _ilike: $searchname }\r\n//       }\r\n//     ){\r\n//       id\r\n//       name\r\n//       rocket\r\n//     }\r\n//   }\r\n// `\r\n// const [filterUsers, usernameData] = useLazyQuery(FILTER_USERNAME, {\r\n//   variables:{\r\n//     _ilike\r\n//   }\r\n// })\r\n// const [filterRocket, rocketData] = useLazyQuery(FILTER_ROCKETNAME, {\r\n//   variables:{\r\n//     _ilike\r\n//   }\r\n// })\r\n","export const routes = {\r\n  DASHBOARD: '/',\r\n  USERS: '/users',\r\n  LAUNCHES: '/launches',\r\n  ROCKETS: '/rockets',\r\n  EDIT_USER: '/users/:userId/edit',\r\n  CREATE_USER: '/users/create',\r\n  ROCKET_BY_ID: '/rockets/:rocketId',\r\n  LAUNCH_BY_ID: '/launches/:launchId',\r\n  UPCOMING_LAUNCH_BY_ID: 'upcoming-launch/:launchId',\r\n  ERROR_404: '*'\r\n};\r\nexport const defaultDateFormat = 'MM/DD/YYYY';\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  BreadcrumbLink\r\n} from '@progress/kendo-react-layout';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\nimport { GET_LAUNCHES, TOTAL_LAUNCH_COUNT } from './graphql/queries/queries';\r\nimport { routes } from '../common/constants';\r\nimport { Pager } from \"@progress/kendo-react-data-tools\";\r\n\r\nexport default function Launches() {\r\n  const history = useHistory();\r\n  const totalCountData = useQuery(TOTAL_LAUNCH_COUNT);\r\n  const totalCount =\r\n    !totalCountData.loading && totalCountData.data.launches.length;\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [tableData, setTableData] = useState([]);\r\n  const { loading, error, data, fetchMore } = useQuery(GET_LAUNCHES, {\r\n    variables: {\r\n      limit: 10,\r\n      offset\r\n    }\r\n  });\r\n  function redirect(id) {\r\n    console.log(id);\r\n    history.push(`launches/${id}`);\r\n  }\r\n  // function handleSizeChange(current, size) {\r\n  //   setItemsPerPage(size);\r\n  //   setPage(current);\r\n  //   fetchMore({\r\n  //     variables: { limit: size, offset: (current - 1) * size }\r\n  //   }).then((res) => setTableData(res.data));\r\n  //   totalCountData.refetch();\r\n  // }\r\n  function handlePageChange(pageNumEvent) {\r\n    setItemsPerPage(pageNumEvent.take);\r\n    setOffset(pageNumEvent.skip);\r\n    fetchMore({\r\n      variables: { limit: pageNumEvent.take, offset: pageNumEvent.skip }\r\n    }).then((res) => setTableData(res.data));\r\n    totalCountData.refetch();\r\n    setPage(pageNumEvent.skip/10+1);\r\n  }\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"mar\">\r\n      <a href=\"/launches\">\r\n        <BreadcrumbLink dir=\"rtl\" id=\"launches\" text=\"Launches\" />\r\n      </a>\r\n      <div className=\"heading\">\r\n        <h1>Launches</h1>\r\n      </div>\r\n      <div\r\n        className=\"row\"\r\n        style={{ display: 'flex', justifyContent: 'space-evenly' }}\r\n      >\r\n        {((tableData.launches && tableData.launches.length > 0) ||\r\n          data.launches.length > 0) &&\r\n          (tableData.launches && tableData.launches.length > 0\r\n            ? tableData\r\n            : data\r\n          ).launches.map((launch) => (\r\n            <div \r\n              key={launch.id}\r\n              onClick={() => redirect(launch.id)}\r\n              className=\"col-md-3 col-sm-12 col-sm-6 col-lg-3 round k-card card-hover\"\r\n              style={{ alignItems: 'stretch' }}\r\n            >\r\n              <CardHeader className=\"heading\">\r\n                <CardTitle>{launch.mission_name}</CardTitle>\r\n              </CardHeader>\r\n              <CardBody className=\"mar\">{launch.details || \"No Description\"}</CardBody>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"flex-end\">\r\n        <Pager\r\n          skip={itemsPerPage * (page - 1)}\r\n          take={itemsPerPage}\r\n          total={totalCount}\r\n          onPageChange={handlePageChange}\r\n          buttonCount={5}\r\n          info={true}\r\n          type=\"numeric\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ROCKETS, TOTAL_ROCKET_COUNT } from './graphql/queries/queries';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\nimport { routes } from '../common/constants';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  BreadcrumbLink\r\n} from '@progress/kendo-react-layout';\r\nimport { Pager } from \"@progress/kendo-react-data-tools\";\r\n\r\nexport default function Launches() {\r\n  const [offset, setOffset] = useState(0);\r\n  const [tableData, setTableData] = useState([])\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const { loading, error, data, fetchMore } = useQuery(GET_ROCKETS, {\r\n    variables: {\r\n      limit: 10,\r\n      offset\r\n    }\r\n  });\r\n  const totalCountData = useQuery(TOTAL_ROCKET_COUNT);\r\n  const totalCount =\r\n    !totalCountData.loading && totalCountData.data.rockets.length;\r\n\r\n  function handlePageChange(pageNumEvent) {\r\n    setItemsPerPage(pageNumEvent.take);\r\n    setOffset(pageNumEvent.skip);\r\n    fetchMore({\r\n      variables: { limit: pageNumEvent.take, offset: pageNumEvent.skip }\r\n    }).then((res) => setTableData(res.data));\r\n    totalCountData.refetch();\r\n    setPage(pageNumEvent.skip/10+1);\r\n  }\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"mar\">\r\n      <a href=\"/rockets\">\r\n        <BreadcrumbLink dir=\"rtl\" id=\"rockets\" text=\"Rockets\" />\r\n      </a>\r\n      <div className=\"heading\">\r\n        <h1>Rockets</h1>\r\n      </div>\r\n      <div\r\n        className=\"row\"\r\n        style={{ display: 'flex', justifyContent: 'center' }}\r\n      >\r\n        {((tableData.rockets && tableData.rockets.length > 0) ||\r\n          data.rockets.length > 0) &&\r\n          (tableData.rockets && tableData.rockets.length > 0\r\n            ? tableData\r\n            : data\r\n          ).rockets.map((rocket) => (\r\n            <div \r\n              key={rocket.id}\r\n              onClick={() => redirect(rocket.id)}\r\n              className=\"col-md-3 col-sm-12 col-lg-3 round k-card card-hover\"\r\n              style={{ alignItems: 'stretch' }}\r\n            >\r\n              <CardHeader className=\"heading\">\r\n                <CardTitle>{rocket.name}</CardTitle>\r\n              </CardHeader>\r\n              <CardBody className=\"mar\">{rocket.description}</CardBody>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"flex-end\">\r\n        <Pager\r\n          skip={itemsPerPage * (page - 1)}\r\n          take={itemsPerPage}\r\n          total={totalCount}\r\n          onPageChange={handlePageChange}\r\n          buttonCount={5}\r\n          info={true}\r\n          type=\"numeric\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card, Row, Col, Pagination, Breadcrumb } from 'antd';\r\nimport { routes } from '../common/constants';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\nimport {\r\n  GET_UPCOMING_LAUNCHES,\r\n  TOTAL_UPCOMING_LAUNCH_COUNT\r\n} from './graphql/queries/queries';\r\n\r\nexport default function UpComingLaunches() {\r\n  const [offset, setOffset] = useState(0);\r\n  const { loading, error, data, fetchMore } = useQuery(GET_UPCOMING_LAUNCHES, {\r\n    variables: {\r\n      offset\r\n    }\r\n  });\r\n  function handlePageChange(pageNum) {\r\n    setOffset(pageNum - 1);\r\n  }\r\n  const totalCountData = useQuery(TOTAL_UPCOMING_LAUNCH_COUNT);\r\n  const totalCount =\r\n    !totalCountData.loading && totalCountData.data.launchesUpcoming.length;\r\n  useEffect(() => {\r\n    if (offset) {\r\n      fetchMore({ variables: { offset: offset } });\r\n      totalCountData.refetch();\r\n    }\r\n  }, [fetchMore, offset, totalCountData]);\r\n\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  if (loading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoaderCardComponent loading={loading} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"mar\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href={routes.DASHBOARD}>Upcoming Launches</a>\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"heading\">\r\n        <h1>Upcoming Launches</h1>\r\n      </div>\r\n      <Row className=\"mar center\">\r\n        {data.launchesUpcoming.length > 0 &&\r\n          data.launchesUpcoming.map((launch) => (\r\n            <Col\r\n              span={6}\r\n              key={launch.id}\r\n              xs={{ span: 24 }}\r\n              sm={{ span: 24 }}\r\n              md={{ span: 12 }}\r\n              lg={{ span: 6 }}\r\n            >\r\n              <a href={`upcoming-launch/${launch.id}`}>\r\n                <Card\r\n                  hoverable\r\n                  loading={loading}\r\n                  key={launch.id}\r\n                  className=\"border card-hover\"\r\n                >\r\n                  <div className=\"center\">\r\n                    <h3>{launch.mission_name}</h3>\r\n                  </div>\r\n                  <Card.Meta description={launch.details} />\r\n                </Card>\r\n              </a>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      <div className=\"flex-end\">\r\n        <Pagination\r\n          current={offset + 1}\r\n          onChange={handlePageChange}\r\n          defaultPageSize={1}\r\n          pageSize={1}\r\n          total={totalCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","/* eslint-disable react/button-has-type */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  AppBar,\r\n  AppBarSection,\r\n  AppBarSpacer,\r\n  Avatar\r\n} from '@progress/kendo-react-layout';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Badge, BadgeContainer } from '@progress/kendo-react-indicators';\r\n\r\nexport default function NavBar() {\r\n  const location = window.location.pathname\r\n  var mySubString = location.substring(\r\n    location.indexOf(\"/\") + 1, \r\n    location.lastIndexOf(\"/\")  \r\n  );\r\n  console.log(location, mySubString)\r\n  return (\r\n    <>\r\n      <AppBar className=\"fixed-header\">\r\n        <AppBarSpacer\r\n          style={{\r\n            width: 4\r\n          }}\r\n        />\r\n        <AppBarSection>\r\n          <h1 className=\"title\">\r\n            <a href=\"/\">Kendo Apollo SpaceX</a>\r\n          </h1>\r\n        </AppBarSection>\r\n        <AppBarSpacer />\r\n        <AppBarSection>\r\n          <ul>\r\n            <li>\r\n              <span>\r\n                <a href=\"/launches\" style={{borderBottomStyle: (mySubString ===\"launches\" || location === '/launches') ? \"solid\": \"none\"}}>Launches</a>\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span>\r\n                <a href=\"/rockets\" style={{borderBottomStyle: (mySubString ===\"rockets\" || location === '/rockets') ? \"solid\": \"none\"}}>Rockets</a>\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span>\r\n                <a href=\"/users\" style={{borderBottomStyle: (mySubString ===\"users\" || location === '/users') ? \"solid\": \"none\"}}>Users</a>\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </AppBarSection>\r\n      </AppBar>\r\n      <style>{`\r\n          body {\r\n              background: #dfdfdf;\r\n          }\r\n          .title {\r\n              font-size: 18px;\r\n              margin: 0;\r\n          }\r\n          ul {\r\n              font-size: 14px;\r\n              list-style-type: none;\r\n              padding: 0;\r\n              margin: 0;\r\n              display: flex;\r\n          }\r\n          li {\r\n              margin: 0 10px;\r\n          }\r\n          li:hover {\r\n              cursor: pointer;\r\n              color: #84cef1;\r\n          }\r\n          .k-button {\r\n              padding: 0;\r\n          }\r\n          .k-badge-container {\r\n              margin-right: 8px;\r\n          }\r\n      `}</style>\r\n    </>\r\n  );\r\n}\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\nimport { message } from 'antd';\r\nimport { get, isObject } from 'lodash';\r\nimport { onError } from '@apollo/client/link/error';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  ApolloLink,\r\n  createHttpLink,\r\n  from\r\n} from '@apollo/client';\r\nimport { defaultDateFormat } from './common/constants';\r\nimport history from './historyData';\r\nimport NavBar from './components/NavBar';\r\n\r\nlet disableToastTimeout = null;\r\nexport const cacheData = new InMemoryCache();\r\nexport function dateConvert(date) {\r\n  return moment(date).format(defaultDateFormat);\r\n}\r\nconst toast = ({ message: content, type }) => {\r\n  message.destroy();\r\n  switch (type) {\r\n    case 'info':\r\n      message.info(content);\r\n      break;\r\n    case 'success':\r\n      message.success(content);\r\n      break;\r\n    case 'warning':\r\n      message.warning(content);\r\n      break;\r\n    case 'error':\r\n      message.error(content);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\nconst httpLink = createHttpLink({\r\n  uri: 'https://api.spacex.land/graphql/',\r\n  credentials: 'same-origin'\r\n});\r\nconst responseMessageLink = new ApolloLink((operation, forward) => {\r\n  return forward(operation).map((response) => {\r\n    const { data } = response;\r\n\r\n    if (\r\n      data &&\r\n      isObject(data) &&\r\n      Object.keys(data).length > 0 &&\r\n      data[`${Object.keys(data)[0]}`] &&\r\n      data[`${Object.keys(data)[0]}`].message\r\n    ) {\r\n      if (Object.keys(data)[0] === 'forgotUserPassword') {\r\n        if (data[`${Object.keys(data)[0]}`].status !== 'ERROR') {\r\n          setTimeout(() => {\r\n            toast({\r\n              message:\r\n                data[`${Object.keys(data)[0]}`].message ||\r\n                'Operation successful',\r\n              type: 'success'\r\n            });\r\n          }, 1000);\r\n        }\r\n      } else {\r\n        setTimeout(() => {\r\n          const oResponse = data[`${Object.keys(data)[0]}`];\r\n\r\n          if (!response) {\r\n            return;\r\n          }\r\n\r\n          toast({\r\n            message: oResponse.message || 'Operation successful',\r\n            type: oResponse.status === 'ERROR' ? 'error' : 'success'\r\n          });\r\n        }, 1000);\r\n      }\r\n    }\r\n    return response;\r\n  });\r\n});\r\n\r\nconst errorLink = onError((options) => {\r\n  const { graphQLErrors, networkError, response } = options;\r\n\r\n  if (networkError && networkError.statusCode === 405) {\r\n    if (disableToastTimeout) {\r\n      clearTimeout(disableToastTimeout);\r\n    }\r\n\r\n    disableToastTimeout = setTimeout(() => {\r\n      if (networkError.result && networkError.result.message) {\r\n        toast({\r\n          message: networkError.result.message,\r\n          type: 'error'\r\n        });\r\n      }\r\n    }, 200);\r\n\r\n    history.replace('/logout');\r\n    return;\r\n  }\r\n\r\n  if (graphQLErrors && graphQLErrors.length > 0) {\r\n    const isForBidden =\r\n      get(graphQLErrors[0], 'extensions.code') === 'FORBIDDEN';\r\n\r\n    if (!isForBidden) {\r\n      setTimeout(() => {\r\n        toast({\r\n          message: graphQLErrors[0].message,\r\n          type: 'error'\r\n        });\r\n      }, 1000);\r\n    }\r\n  } else {\r\n    setTimeout(() => {\r\n      toast({\r\n        message: 'Something went wrong!',\r\n        type: 'error'\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  if (response) {\r\n    response.errors.map((error) => {\r\n      const { message: errorMessage, locations, path, extensions } = error;\r\n\r\n      // Enable when sentry integrated\r\n      Sentry.captureException(\r\n        new Error(\r\n          `[Response error]: Message: ${errorMessage}, Location: ${locations}, Path: ${path}`\r\n        )\r\n      );\r\n\r\n      if (extensions && extensions.code === 'FORBIDDEN') {\r\n        history.replace('/access-denied');\r\n      }\r\n\r\n      if (\r\n        extensions &&\r\n        (extensions.code === 'UNAUTHENTICATED' ||\r\n          extensions.code === 405 ||\r\n          extensions.exception.name === 'JsonWebTokenError')\r\n      ) {\r\n        history.replace('/logout');\r\n      }\r\n\r\n      // eslint-disable-next-line no-console\r\n      return console.log(\r\n        `[Response error]: Message: ${errorMessage}, Location: ${locations}, Path: ${path}`\r\n      );\r\n    });\r\n  }\r\n\r\n  if (networkError) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`[Network error]: ${networkError}`);\r\n    Sentry.captureException(new Error(`[Network error]: ${networkError}`));\r\n  }\r\n});\r\nexport const client = new ApolloClient({\r\n  link: from([responseMessageLink, errorLink, httpLink]),\r\n  cache: cacheData\r\n});\r\n\r\nexport default function Apollo({ children }) {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      {children}\r\n    </ApolloProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Loader } from \"@progress/kendo-react-indicators\";\r\n\r\nconst LoaderComponent = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Loader type={\"converging-spinner\"} />\r\n    </div>\r\n  );\r\n};\r\nexport default LoaderComponent;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardBody,\r\n  Avatar\r\n} from '@progress/kendo-react-layout';\r\nimport { BreadcrumbLink } from '@progress/kendo-react-layout'\r\nimport { dateConvert } from '../Apollo';\r\nimport { GET_LAUNCH_BY_ID } from './graphql/queries/queries';\r\nimport LoaderComponent from '../components/LoaderComponent';\r\n\r\nexport default function GetLaunchById() {\r\n  const { launchId } = useParams();\r\n  const { loading, error, data } = useQuery(GET_LAUNCH_BY_ID, {\r\n    variables: {\r\n      id: launchId\r\n    }\r\n  });\r\n  if (loading) {\r\n    return <LoaderComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <a href='/launches'>\r\n          <BreadcrumbLink dir='rtl' id='launches' text='Launches'>\r\n          </BreadcrumbLink>\r\n        </a>\r\n        /{' '}{data.launch.mission_name}\r\n      </div>\r\n      <div>\r\n        <div className=\"heading\">\r\n          <h2>{data.launch.mission_name}</h2>\r\n        </div>\r\n        <div className=\"center mar\"  style={{marginTop: '3rem'}}>\r\n          <div  style={{display: \"flex\", justifyContent: \"space-evenly\", flexWrap: \"wrap\"}}>\r\n            {' '}\r\n            {data.launch.links.flickr_images.map((imageLink) => (\r\n              <img\r\n                key={imageLink}\r\n                src={imageLink}\r\n                className=\"image-style\"\r\n                alt=\"img\"\r\n              />\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <div>\r\n              \r\n              <div>\r\n                <div className=\"mar\">{data.launch.details}</div>\r\n                <div className=\"mar\">\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Ship name:{' '}</div>\r\n                    <div className=\"inline\">{' '}{data.launch.ships.name || \"-\"}</div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Ship weight:{' '}</div>\r\n                    <div className=\"inline\">{' '}{data.launch.ships.weight_kg || \"-\"}</div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Ship was built in:{' '}</div>\r\n                    <div className=\"inline\">{' '}{data.launch.ships.year_built || '-'}</div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Rocket name:{' '}</div>\r\n                    <div className=\"inline\">{' '}\r\n                      <a href={`/rockets/${data.launch.rocket.rocket.id}`}>\r\n                        {data.launch.rocket.rocket_name || \"-\"}\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Launch site:{' '}</div>\r\n                    <div className=\"inline\">{' '}{data.launch.launch_site.site_name_long || \"-\"}</div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Launch Date: {' '}</div>\r\n                    <div className=\"inline\">{' '}{dateConvert(data.launch.launch_date_local)}</div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Video link:{' '}</div>\r\n                    <div className=\"inline\">\r\n                      <a href={data.launch.links.video_link}>\r\n                        {data.launch.links.video_link}\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Want to learn more about this? {' '}</div>\r\n                    <div className=\"inline\"><a href={data.launch.links.article_link}>here</a></div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Was the launch successful ? {' '}</div>\r\n                    <div className=\"inline\">{' '}{data.launch.launch_success || \"-\"}</div>\r\n                  </div>\r\n                  <div className=\"pad\">\r\n                    <div className=\"inline bold\">Is the launch upcoming ? {' '}</div>\r\n                    <div className=\"inline\">{' '}{data.launch.upcoming || \"-\"}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card, Row, Breadcrumb } from 'antd';\r\nimport { routes } from '../common/constants';\r\nimport { GET_ROCKET_BY_ID } from './graphql/queries/queries';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\n\r\nexport default function GetLaunchById() {\r\n  const { rocketId } = useParams();\r\n  const { loading, error, data } = useQuery(GET_ROCKET_BY_ID, {\r\n    variables: { id: rocketId }\r\n  });\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"mar\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <a href={routes.ROCKETS}>Rockets</a>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>{data.rocket.name}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"byID\">\r\n        <div className=\"center mar\">\r\n          <div className=\"heading\">\r\n            <h1>Rocket by ID</h1>\r\n          </div>\r\n          <div>\r\n            <div loading={loading}>\r\n              <div className=\"heading\">\r\n                <h3>\r\n                  {data.rocket.name} by {data.rocket.company} from{' '}\r\n                  {data.rocket.country}\r\n                </h3>\r\n              </div>\r\n              <div>{data.rocket.description}</div>\r\n              <div className=\"pad\">\r\n                <div className=\"inline bold\">Boosters: {' '}</div>\r\n                <div className=\"inline\">{' '}{data.rocket.boosters}</div>\r\n              </div>\r\n              <div className=\"pad\">\r\n                <div className=\"inline bold\">Engines: {' '}</div>\r\n                <div className=\"inline\">{' '}{data.rocket.engines.engines_loss_max || 'null'}</div>\r\n              </div>\r\n              <div className=\"pad\">\r\n                <div className=\"inline bold\">Diameter: {' '}</div>\r\n                <div className=\"inline\">{' '} {data.rocket.diameter.meters}</div>\r\n              </div>\r\n              <div className=\"pad\">\r\n                <div className=\"inline bold\">Weight: {' '}</div>\r\n                <div className=\"inline\">{' '}{data.rocket.mass.kg}kg</div>\r\n              </div>\r\n              <div className=\"pad\">\r\n                <div className=\"inline bold\">Height: {' '}</div>\r\n                <div className=\"inline\">{' '}{data.rocket.height.meters} m</div>\r\n              </div>\r\n              <div className=\"pad\">\r\n                <div className=\"inline bold\">Cost: {' '}</div>\r\n                <div className=\"inline\">{' '}{data.rocket.cost_per_launch}</div>\r\n              </div>\r\n              <div>\r\n                {' '}\r\n                {data.rocket.landing_legs.number} landing legs made with{' '}\r\n                {data.rocket.landing_legs.material || 'null'}\r\n              </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ADD_USER = gql`\r\n  mutation insert_users($name: String, $rocket: String, $twitter: String) {\r\n    insert_users(objects: { name: $name, rocket: $rocket, twitter: $twitter }) {\r\n      returning {\r\n        name\r\n        id\r\n        rocket\r\n        twitter\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EDIT_USER = gql`\r\n  mutation update_users(\r\n    $_eq: uuid\r\n    $name: String\r\n    $rocket: String\r\n    $twitter: String\r\n  ) {\r\n    update_users(\r\n      where: { id: { _eq: $_eq } }\r\n      _set: { name: $name, rocket: $rocket, twitter: $twitter }\r\n    ) {\r\n      returning {\r\n        id\r\n        name\r\n        rocket\r\n        twitter\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_USER = gql`\r\n  mutation delete_users($_eq: uuid) {\r\n    delete_users(where: { id: { _eq: $_eq } }) {\r\n      returning {\r\n        name\r\n        rocket\r\n        twitter\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Pager } from \"@progress/kendo-react-data-tools\";\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid'\r\nimport { DELETE_USER } from './graphql/mutations/mutations';\r\nimport LoaderComponent from '../components/LoaderComponent';\r\nimport { client } from '../Apollo';\r\nimport { routes } from '../common/constants';\r\nimport { BreadcrumbLink } from '@progress/kendo-react-layout'\r\nimport { FloatingLabel } from \"@progress/kendo-react-labels\";\r\nimport { Input } from \"@progress/kendo-react-inputs\";\r\nimport { Dialog, DialogActionsBar } from \"@progress/kendo-react-dialogs\";\r\nimport {\r\n  GET_USERS,\r\n  GET_DATA_COUNT,\r\n  NEW_QUERY\r\n} from './graphql/queries/queries';\r\n\r\nexport default function Users() {\r\n  const totalCountData = useQuery(GET_DATA_COUNT);\r\n                                                                                                                                                       \r\n  const [search, setSearch] = useState('');\r\n  // const [nameSearch, setNameSearch] = useState(\"\")\r\n  // const [rocketSearch, setRocketSearch] = useState(\"\")\r\n  const totalCount =\r\n    !totalCountData.loading && totalCountData.data.users.length;\r\n  const [tableData, setTableData] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [count, setCount] = useState(totalCount);\r\n\r\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_USERS, {\r\n    variables: {\r\n      limit: itemsPerPage\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n  const [deleteUser] = useMutation(DELETE_USER);\r\n  const anchor = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  function filter(e) {\r\n    setSearch(e.target.value);\r\n    const temp = '%';\r\n    const searchText = temp.concat(e.target.value, temp);\r\n    client\r\n      .query({\r\n        query: NEW_QUERY,\r\n        variables: {\r\n          search: searchText,\r\n          limit: itemsPerPage\r\n        }\r\n      })\r\n      .then((res) => {\r\n        setTableData(res.data.users);\r\n        setCount(res.data.users.length);\r\n      });\r\n  }\r\n  // function confirm(_eq) {\r\n  //   deleteUser({ variables: { _eq } });\r\n  //   refetch();\r\n  //   totalCountData.refetch().then((res) => setCount(res.data.users.length));\r\n  //   message.success('user deleted!');\r\n  // }\r\n  // function cancel() {\r\n  //   message.error('Clicked on No');\r\n  // }\r\n  const InlineComponent = ({id}) => {\r\n    return (\r\n      <td>\r\n        <a style={{marginRight: \"2rem\"}} children={tableData} href={`/users/${id}/edit`}>\r\n          edit\r\n        </a>\r\n        <a href={`#${id}`} onClick={() => setShow(!show)}>delete</a>              \r\n        <div>\r\n          {show && (\r\n            <Dialog title={\"Please confirm\"} onClose={() => setShow(!show)}>\r\n              <p\r\n                style={{\r\n                  margin: \"25px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Are you sure you want to continue?\r\n              </p>\r\n              <DialogActionsBar>\r\n                <button className=\"k-button\" onClick={() => setShow(!show)}>\r\n                  No\r\n                </button>\r\n                <Button primary className=\"k-button\" onClick={() => confirm(id)}>\r\n                  Yes\r\n                </Button>\r\n              </DialogActionsBar>\r\n            </Dialog>\r\n          )}\r\n        </div>\r\n      </td>\r\n    )\r\n  }\r\n  function handlePageChange(pageNumEvent) {\r\n    console.log(pageNumEvent.take, pageNumEvent.skip, page);\r\n    setItemsPerPage(pageNumEvent.take);\r\n    setPage(pageNumEvent.skip/10);\r\n    fetchMore({\r\n      variables: { limit: pageNumEvent.take, offset: pageNumEvent.skip }\r\n    }).then((res) => {\r\n      console.log(res.data.users);\r\n      setTableData(res.data.users);\r\n    });\r\n    totalCountData.refetch().then((res) => setCount(res.data.users.length));\r\n  }\r\n  async function confirm(_eq) {\r\n    console.log(_eq)\r\n    await deleteUser({ variables: { _eq } }).then(() => console.log(\"don\"))\r\n    await fetchMore({\r\n      variables: { limit: itemsPerPage, offset: (page-1)*itemsPerPage }\r\n    }).then((res) => {\r\n      console.log(res.data.users);\r\n      setTableData(res.data.users);\r\n      setShow(!show)\r\n    });\r\n    await totalCountData.refetch().then(res => setCount(res.data.users.length))\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoaderComponent />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p>Error {JSON.stringify(error)}</p>;\r\n  }\r\n  return (\r\n    <div className=\"mar\">\r\n      <a href='/users'><BreadcrumbLink dir='rtl' id='users' text='Users'></BreadcrumbLink></a>\r\n      <div className=\"heading\">\r\n        <h1>Users</h1>\r\n      </div>\r\n      <div className=\"flex-between\">\r\n        <div className=\"pad\" >\r\n          <a href=\"/users/create\">\r\n            <Button primary=\"true\" style={{padding: \"0.5rem\"}}>\r\n              Create User\r\n            </Button>\r\n          </a>\r\n        </div>\r\n        {/* <div className=\"center\">\r\n          <Input value={search} onChange={filter}/>\r\n        </div> */}\r\n        <div>\r\n          <FloatingLabel\r\n            label={\"Search\"}\r\n            editorId={\"input-id\"}\r\n            editorValue={search}\r\n          >\r\n            <Input\r\n              id={\"input-id\"}\r\n              value={search}\r\n              onChange={filter}\r\n            />\r\n          </FloatingLabel>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Grid \r\n          data={tableData.length > 0 ? tableData : data.users}\r\n          pageable={false}  \r\n        >\r\n          <GridColumn field=\"name\" title=\"Name\" />\r\n          <GridColumn field=\"rocket\" title=\"Rocket\" />\r\n          <GridColumn field=\"action\"classNAME=\"flex-center\" title=\"Action\" cell={props => (\r\n            <InlineComponent id={props.dataItem.id} />\r\n            // <td>\r\n            //   <a style={{marginRight: \"2rem\"}} children={tableData} href={`/users/${props.dataItem.id}/edit`}>\r\n            //     edit\r\n            //   </a>\r\n            //   <a href='#delete' onClick={() => setShow(!show)}>delete</a>              \r\n            //   <div>\r\n            //     {show && (\r\n            //       <Dialog title={\"Please confirm\"} onClose={() => setShow(!show)}>\r\n            //         <p\r\n            //           style={{\r\n            //             margin: \"25px\",\r\n            //             textAlign: \"center\",\r\n            //           }}\r\n            //         >\r\n            //           Are you sure you want to continue?\r\n            //         </p>\r\n            //         <DialogActionsBar>\r\n            //           <button className=\"k-button\" onClick={() => setShow(!show)}>\r\n            //             No\r\n            //           </button>\r\n            //           <Button primary className=\"k-button\" onClick={() => confirm(props.dataItem.id)}>\r\n            //             Yes\r\n            //           </Button>\r\n            //         </DialogActionsBar>\r\n            //       </Dialog>\r\n            //     )}\r\n            //   </div>\r\n            // </td>\r\n            // confirm(props.dataItem.id)\r\n          )}/>\r\n        </Grid>\r\n        <Pager\r\n          skip={itemsPerPage * (page - 1)}\r\n          take={itemsPerPage}\r\n          total={data.users.length > 0 ? totalCount : count}\r\n          onPageChange={handlePageChange}\r\n          buttonCount={5}\r\n          info={true}\r\n          previousNext={true}\r\n          type=\"numeric\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport { FieldWrapper } from '@progress/kendo-react-form';\r\nimport {\r\n  Input,\r\n  MaskedTextBox,\r\n  NumericTextBox,\r\n  Checkbox,\r\n  ColorPicker,\r\n  Switch,\r\n  RadioGroup,\r\n  Slider,\r\n  SliderLabel,\r\n  RangeSlider,\r\n  TextArea,\r\n  Rating\r\n} from '@progress/kendo-react-inputs';\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  DateTimePicker,\r\n  DateRangePicker,\r\n  DateInput\r\n} from '@progress/kendo-react-dateinputs';\r\nimport {\r\n  Label,\r\n  Error,\r\n  Hint,\r\n  FloatingLabel\r\n} from '@progress/kendo-react-labels';\r\nimport { Upload } from '@progress/kendo-react-upload';\r\nimport {\r\n  DropDownList,\r\n  AutoComplete,\r\n  MultiSelect,\r\n  ComboBox,\r\n  MultiColumnComboBox,\r\n  DropDownTree\r\n} from '@progress/kendo-react-dropdowns';\r\nimport { processTreeData, expandedState } from './tree-data';\r\n\r\nexport const FormInput = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    type,\r\n    optional,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n        optional={optional}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <div className=\"k-form-field-wrap\">\r\n        <Input\r\n          valid={valid}\r\n          type={type}\r\n          id={id}\r\n          disabled={disabled}\r\n          ariaDescribedBy={`${hintId} ${errorId}`}\r\n          {...others}\r\n        />\r\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n        {showValidationMessage && (\r\n          <Error id={errorId}>{validationMessage}</Error>\r\n        )}\r\n      </div>\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormRadioGroup = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    id,\r\n    label,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    visited,\r\n    modified,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <RadioGroup\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ariaLabelledBy={labelId}\r\n        valid={valid}\r\n        disabled={disabled}\r\n        ref={editorRef}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormNumericTextBox = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label editorId={id} editorValid={valid} editorDisabled={disabled}>\r\n        {label}\r\n      </Label>\r\n      <NumericTextBox\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormCheckbox = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    optional,\r\n    label,\r\n    visited,\r\n    modified,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Checkbox\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        label={label}\r\n        labelOptional={optional}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormSwitch = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    optional,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n        optional={optional}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <Switch\r\n        ref={editorRef}\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormMaskedTextBox = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    hint,\r\n    optional,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label editorId={id} editorValid={valid} optional={optional}>\r\n        {label}\r\n      </Label>\r\n      <div className=\"k-form-field-wrap\">\r\n        <MaskedTextBox\r\n          ariaDescribedBy={`${hintId} ${errorId}`}\r\n          valid={valid}\r\n          id={id}\r\n          {...others}\r\n        />\r\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n        {showValidationMessage && (\r\n          <Error id={errorId}>{validationMessage}</Error>\r\n        )}\r\n      </div>\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormTextArea = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    hint,\r\n    disabled,\r\n    optional,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label editorId={id} editorValid={valid} optional={optional}>\r\n        {label}\r\n      </Label>\r\n      <TextArea\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormColorPicker = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <ColorPicker\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormSlider = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    data,\r\n    min,\r\n    max,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <Slider\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        min={min}\r\n        max={max}\r\n        {...others}\r\n      >\r\n        {data.map((value) => (\r\n          <SliderLabel title={value} key={value} position={value}>\r\n            {value.toString()}\r\n          </SliderLabel>\r\n        ))}\r\n      </Slider>\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormRangeSlider = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    hint,\r\n    disabled,\r\n    data,\r\n    min,\r\n    max,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label editorId={id} editorValid={valid}>\r\n        {label}\r\n      </Label>\r\n      <RangeSlider\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        min={min}\r\n        max={max}\r\n        {...others}\r\n      >\r\n        {data.map((value) => {\r\n          return (\r\n            <SliderLabel key={value} position={value}>\r\n              {value.toString()}\r\n            </SliderLabel>\r\n          );\r\n        })}\r\n      </RangeSlider>\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormRating = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    hint,\r\n    disabled,\r\n    optional,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <Label editorId={id} editorValid={valid} optional={optional}>\r\n        {label}\r\n      </Label>\r\n      <Rating\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        {...others}\r\n      />\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormUpload = (fieldRenderProps) => {\r\n  const {\r\n    value,\r\n    id,\r\n    optional,\r\n    label,\r\n    hint,\r\n    validationMessage,\r\n    touched,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n\r\n  const onChangeHandler = (event) => {\r\n    fieldRenderProps.onChange({\r\n      value: event.newState\r\n    });\r\n  };\r\n\r\n  const onRemoveHandler = (event) => {\r\n    fieldRenderProps.onChange({\r\n      value: event.newState\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FieldWrapper>\r\n      <Label id={labelId} editorId={id} optional={optional}>\r\n        {label}\r\n      </Label>\r\n      <Upload\r\n        id={id}\r\n        autoUpload={false}\r\n        showActionButtons={false}\r\n        multiple={false}\r\n        files={value}\r\n        onAdd={onChangeHandler}\r\n        onRemove={onRemoveHandler}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ariaLabelledBy={labelId}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormDropDownList = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <DropDownList\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormAutoComplete = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <AutoComplete\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormComboBox = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <ComboBox\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormMultiColumnComboBox = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      header: <span>header</span>,\r\n      width: '100px'\r\n    },\r\n    {\r\n      field: 'name',\r\n      header: 'Name',\r\n      width: '300px'\r\n    },\r\n    {\r\n      field: 'position',\r\n      header: 'Position',\r\n      width: '300px'\r\n    }\r\n  ];\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <MultiColumnComboBox\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        columns={columns}\r\n        textField=\"name\"\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormMultiSelect = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <MultiSelect\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormDropDownTree = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    data,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const { value, selectField, expandField, dataItemKey, filter } = others;\r\n  const [expanded, setExpanded] = React.useState([data[0][dataItemKey]]);\r\n  const treeData = React.useMemo(\r\n    () =>\r\n      processTreeData(\r\n        data,\r\n        {\r\n          expanded,\r\n          value,\r\n          filter\r\n        },\r\n        {\r\n          selectField,\r\n          expandField,\r\n          dataItemKey,\r\n          subItemsField: 'items'\r\n        }\r\n      ),\r\n    [data, expanded, value, filter, selectField, expandField, dataItemKey]\r\n  );\r\n  const onExpandChange = React.useCallback(\r\n    (event) => setExpanded(expandedState(event.item, dataItemKey, expanded)),\r\n    [expanded, dataItemKey]\r\n  );\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <DropDownTree\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        data={treeData}\r\n        onExpandChange={onExpandChange}\r\n        dataItemKey={others.dataItemKey}\r\n        textField={others.textField}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormDatePicker = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    hintDirection,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <div className=\"k-form-field-wrap\">\r\n        <DatePicker\r\n          ariaLabelledBy={labelId}\r\n          ariaDescribedBy={`${hintId} ${errorId}`}\r\n          valid={valid}\r\n          id={id}\r\n          disabled={disabled}\r\n          {...others}\r\n        />\r\n        {showHint && (\r\n          <Hint id={hintId} direction={hintDirection}>\r\n            {hint}\r\n          </Hint>\r\n        )}\r\n        {showValidationMessage && (\r\n          <Error id={errorId}>{validationMessage}</Error>\r\n        )}\r\n      </div>\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormDateTimePicker = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <DateTimePicker\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormTimePicker = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <TimePicker\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormDateInput = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <DateInput\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormDateRangePicker = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    wrapperStyle,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const editorRef = React.useRef(null);\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  const labelId = label ? `${id}_label` : '';\r\n  return (\r\n    <FieldWrapper style={wrapperStyle}>\r\n      <Label\r\n        id={labelId}\r\n        editorRef={editorRef}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <DateRangePicker\r\n        ariaLabelledBy={labelId}\r\n        ariaDescribedBy={`${hintId} ${errorId}`}\r\n        ref={editorRef}\r\n        valid={valid}\r\n        id={id}\r\n        disabled={disabled}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\nexport const FormFloatingNumericTextBox = (fieldRenderProps) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    label,\r\n    id,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    optional,\r\n    value,\r\n    ...others\r\n  } = fieldRenderProps;\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hintId = showHint ? `${id}_hint` : '';\r\n  const errorId = showValidationMessage ? `${id}_error` : '';\r\n  return (\r\n    <FieldWrapper>\r\n      <FloatingLabel\r\n        optional={optional}\r\n        editorValue={value}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n        label={label}\r\n      >\r\n        <NumericTextBox\r\n          ariaDescribedBy={`${hintId} ${errorId}`}\r\n          value={value}\r\n          valid={valid}\r\n          id={id}\r\n          disabled={disabled}\r\n          {...others}\r\n        />\r\n      </FloatingLabel>\r\n      {showHint && <Hint id={hintId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\n","/* eslint-disable no-nested-ternary */\r\nimport { getter } from '@progress/kendo-react-common';\r\nconst URLRegex = new RegExp(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g)\r\nconst emailRegex = new RegExp(/\\S+@\\S+\\.\\S+/);\r\nconst phoneRegex = new RegExp(/^[0-9 ()+-]+$/);\r\nconst ccardRegex = new RegExp(/^[0-9-]+$/);\r\nconst cvcRegex = new RegExp(/^[0-9]+$/);\r\nexport const termsValidator = (value) =>\r\n  value ? '' : \"It's required to agree with Terms and Conditions.\";\r\nexport const emailValidator = (value) =>\r\n  !value\r\n    ? 'Email field is required.'\r\n    : emailRegex.test(value)\r\n    ? ''\r\n    : 'Email is not in a valid format.';\r\nexport const nameValidator = (value) =>\r\n  !value\r\n    ? 'Full Name is required'\r\n    : value.length < 7\r\n    ? 'Full Name should be at least 7 characters long.'\r\n    : '';\r\nexport const userNameValidator = (value) =>\r\n  !value\r\n    ? 'User Name is required'\r\n    : value.length < 5\r\n    ? 'User name should be at least 5 characters long.'\r\n    : '';\r\nexport const phoneValidator = (value) =>\r\n  !value\r\n    ? 'Phone number is required.'\r\n    : phoneRegex.test(value)\r\n    ? ''\r\n    : 'Not a valid phone number.';\r\nexport const cardValidator = (value) =>\r\n  !value\r\n    ? 'Credit card number is required. '\r\n    : ccardRegex.test(value)\r\n    ? ''\r\n    : 'Not a valid credit card number format.';\r\nexport const cvcValidator = (value) =>\r\n  !value\r\n    ? 'CVC code is required,'\r\n    : cvcRegex.test(value) || value.length !== 3\r\n    ? ''\r\n    : 'Not a valid CVC code format.';\r\nexport const URLValidator = (value) => \r\n  value && URLRegex.test(value) ? '' : 'Not a valid URL';\r\nexport const guestsValidator = (value) =>\r\n  !value ? 'Number of guests is required' : value < 5 ? '' : 'Maximum 5 guests';\r\nexport const arrivalDateValidator = (value) =>\r\n  value ? '' : 'Birth Date is required.';\r\nexport const colorValidator = (value) => (value ? '' : 'Color is required.');\r\nexport const requiredValidator = (value) =>\r\n  value ? '' : 'Error: This field is required.';\r\nexport const passwordValidator = (value) =>\r\n  value && value.length > 8 ? '' : 'Password must be at least 8 symbols.';\r\nexport const addressValidator = (value) =>\r\n  value ? '' : 'Address is required.';\r\nconst userNameGetter = getter('username');\r\nconst emailGetter = getter('email');\r\n\r\nexport const formValidator = (values) => {\r\n  const userName = userNameGetter(values);\r\n  const emailValue = emailGetter(values);\r\n\r\n  if (userName && emailValue && emailRegex.test(emailValue)) {\r\n    return {};\r\n  }\r\n\r\n  return {\r\n    VALIDATION_SUMMARY: 'Please fill in the following fields.',\r\n    username: !userName ? 'User Name is required.' : '',\r\n    email:\r\n      emailValue && emailRegex.test(emailValue)\r\n        ? ''\r\n        : 'Email is required and should be in a valid format.'\r\n  };\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\r\nimport { GET_USER } from './graphql/queries/queries';\r\nimport { EDIT_USER, ADD_USER } from './graphql/mutations/mutations';\r\nimport LoaderComponent from '../components/LoaderComponent';\r\nimport { Form, Field, FormElement, FieldWrapper } from \"@progress/kendo-react-form\";\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\nimport { FormInput } from '../components/form-components';\r\nimport { userNameValidator, URLValidator, requiredValidator } from \"../components/Validators\";\r\nimport { BreadcrumbLink } from '@progress/kendo-react-layout';\r\n\r\nexport default function UserForm() {\r\n  const { userId } = useParams();\r\n  const history = useHistory();\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { _eq: userId }\r\n  });\r\n  const [editUser] = useMutation(EDIT_USER);\r\n  const [addUser] = useMutation(ADD_USER);\r\n  const [twitter, setTwitter] = useState(\"\");\r\n  const [rocket, setRocket] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [disabled, setDisabled] = useState(false);\r\n  \r\n  function redir(clear){\r\n    clear()\r\n    history.push('/users')\r\n  }\r\n  async function handleSubmit(e) {\r\n    setDisabled(true);\r\n    if (userId) {\r\n      // console.log(userId, twitter, rocket, name)\r\n      await editUser({\r\n        variables: { name: e.name, rocket: e.rocket, twitter: e.twitter, _eq: userId }\r\n      }).then(() => {\r\n        setDisabled(false);\r\n        setRedirect(true);\r\n      });\r\n    }else{\r\n      await addUser({\r\n        variables: { name: e.name, rocket: e.rocket, twitter: e.twitter }\r\n      }).then(() => {\r\n        setDisabled(false);\r\n        setRedirect(true);\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setName(data?.users[0]?.name);\r\n    setRocket(data?.users[0]?.rocket);\r\n    setTwitter(data?.users[0]?.twitter);\r\n  }, [data, userId, name, rocket, twitter])\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoaderComponent />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) return `error! ${error.message}`;\r\n  return (\r\n    <div className=\"mar\" style={{marginTop: \"1rem\"}}>\r\n      {redirect && <Redirect to=\"/users\" />}\r\n      <a href='/users'><BreadcrumbLink dir='rtl' id='users' text='Users'></BreadcrumbLink></a>/{' '}{userId ? name: \"\"}\r\n        <div className=\"heading\">\r\n          <h1>{userId ? 'Edit User' : 'Create User'}</h1>\r\n        </div>\r\n        <div className=\"center\">\r\n          <Form\r\n            initialValues={{\r\n              name: userId ? data?.users[0]?.name : \"\",\r\n              rocket: userId ? data?.users[0]?.rocket : \"\",\r\n              twitter: userId ? data?.users[0]?.twitter : \"\"\r\n            }}\r\n            onSubmit={handleSubmit}\r\n            render={(formRenderProps) => (\r\n              <FormElement\r\n                style={{\r\n                  width: 400,\r\n                  height: '100%',\r\n                }}\r\n              >\r\n                {redirect && <Redirect to='/users'/>}\r\n                <Field\r\n                  id={\"name\"}\r\n                  name={\"name\"}\r\n                  label={\"Name\"}\r\n                  component={FormInput}\r\n                  validator={userNameValidator}\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <Field\r\n                  id={\"rocket\"}\r\n                  name={\"rocket\"}\r\n                  label={\"Rocket\"}\r\n                  component={FormInput}\r\n                  validator={requiredValidator}\r\n                  value={rocket}\r\n                  onChange={(e) => setRocket(e.target.value)}\r\n                />\r\n                <Field\r\n                  id={\"twitter\"}\r\n                  name={\"twitter\"}\r\n                  label={\"Twitter URL\"}\r\n                  component={FormInput}\r\n                  value={twitter}\r\n                  validator={URLValidator}\r\n                  onChange={(e) => setTwitter(e.target.value)}\r\n                />\r\n                <div className=\"k-form-buttons flex-between\">\r\n                  <Button\r\n                    primary\r\n                    type={\"submit\"}\r\n                    disabled={disabled}\r\n                    style={{padding: \"0.5rem\"}}\r\n                  >\r\n                  {userId ? 'Update' : 'Create'}\r\n                  </Button>\r\n                  <Button style={{padding: \"0.5rem\"}} onClick={() => redir(formRenderProps.onFormReset)}>Go back</Button>\r\n                </div>\r\n              </FormElement>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card } from 'antd';\r\nimport { dateConvert } from '../Apollo';\r\nimport { GET_UPCOMING_LAUNCH_BY_ID } from './graphql/queries/queries';\r\nimport LoaderCardComponent from '../components/LoaderCardComponent';\r\n\r\nexport default function GetLaunchById() {\r\n  const { launchId } = useParams();\r\n  const { loading, error, data } = useQuery(GET_UPCOMING_LAUNCH_BY_ID, {\r\n    variables: {\r\n      id: launchId\r\n    }\r\n  });\r\n  if (loading) {\r\n    return <LoaderCardComponent loading={loading} />;\r\n  }\r\n  if (error) return <p>Error {JSON.stringify(error)}</p>;\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"heading\">\r\n        <h1>Upcoming Launch by ID</h1>\r\n      </div>\r\n      <div>\r\n        <Card loading={loading} key={data.launchesUpcoming.id}>\r\n          <h4>{data.launchesUpcoming.mission_name}</h4>\r\n          <div>{data.launchesUpcoming.details}</div>\r\n          <div>On {dateConvert(data.launchesUpcoming.launch_date_local)}</div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Launches from './Launches';\r\nimport Rockets from './Rockets';\r\nimport UpComingLaunches from './UpComingLaunches';\r\nimport GetLaunchById from './GetLaunchById';\r\nimport GetRocketById from './GetRocketById';\r\nimport Users from './Users';\r\nimport UserForm from './UserForm';\r\nimport GetUpComingLaunchById from './GetUpComingLaunchById';\r\n// import Error404 from '../Error404';\r\nimport Apollo from '../Apollo';\r\nimport { routes } from '../common/constants';\r\nimport './styles/global/styles.css';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Router>\r\n      <Apollo>\r\n        <Switch>\r\n          {/* <Route exact path={routes.ERROR_404} component={Error404}></Route> */}\r\n          <Route exact path={routes.DASHBOARD} component={UpComingLaunches} />\r\n          <Route exact path={routes.LAUNCHES} component={Launches} />\r\n          <Route exact path={routes.ROCKETS} component={Rockets} />\r\n          <Route exact path={routes.USERS} component={Users} />\r\n          <Route exact path={routes.CREATE_USER} component={UserForm} />\r\n          <Route exact path={routes.EDIT_USER} component={UserForm} />\r\n          <Route exact path={routes.ROCKET_BY_ID} component={GetRocketById} />\r\n          <Route exact path={routes.LAUNCH_BY_ID} component={GetLaunchById} />\r\n          <Route\r\n            exact\r\n            path={routes.UPCOMING_LAUNCH_BY_ID}\r\n            component={GetUpComingLaunchById}\r\n          />\r\n        </Switch>\r\n      </Apollo>\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.scss';\n// import 'antd/dist/antd.less';\n// import '@progress/kendo-react-material/dist/all.css';\nimport Home from './kendo apollo/modules/Home';\nimport NavBar from './kendo apollo/components/NavBar'\n\nfunction App() {\n  return (\n    <div classnmae=\"body\">\n      <NavBar />\n      <div className=\"App main\" style={{overFlowY: \"scroll\"}}>\n        <Home />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}